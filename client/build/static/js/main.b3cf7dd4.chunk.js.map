{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Signin.js","components/screens/Signup.js","components/screens/Profile.js","components/screens/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","id","Home","history","useHistory","useState","posts","setPosts","comment","setComment","useEffect","fetch","method","then","res","json","data","console","log","catch","err","PostComment","postId","item","JSON","parse","localStorage","getItem","name","_id","headers","body","stringify","userName","userId","error","M","toast","html","message","push","map","post","key","postedBy","src","photo","comments","title","type","placeholder","value","onChange","e","target","onClick","bind","Signin","password","setPassword","email","setEmail","setItem","token","user","setName","Profile","mypost","style","maxWidth","margin","display","justifyContent","borderBottom","width","length","CreatePost","setTitle","setBody","image","setImage","url","setUrl","pic","classes","padding","textAlign","files","FormData","append","App","exact","path","Signup","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3cf7dd4.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nconst NavBar = ()=>{\n    return(\n        <nav>\n        <div className=\"nav-wrapper\">\n          <Link to=\"/\" className=\"brand-logo left\">Social Media</Link>\n          <ul id=\"nav-mobile\" className=\"right\">\n            <li><Link to=\"/Signin\">LogIn</Link></li>\n            <li><Link to=\"/Signup\">SignUp</Link></li>\n            <li><Link to=\"/Profile\">Profile</Link></li>\n            <li><Link to=\"/create\">Create Post</Link></li>\n          </ul>\n        </div>\n      </nav>\n\n\n    )\n}\n\nexport default NavBar;","import React,{useState,useEffect} from 'react';\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nconst Home = () =>{\n    const history = useHistory();\n    const [posts,setPosts] = useState([]);\n    const [comment, setComment] = useState(\"\");\n\n    useEffect(()=>{\n        fetch(\"/allpost\",{\n            method:\"get\",\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            console.log(data)\n            setPosts(data.posts);\n        }).catch(err=>{\n            console.log(err)\n        });\n     },[])\n\n     const PostComment=(postId)=>{\n        const item = JSON.parse(localStorage.getItem(\"user\"));\n\n        const obj = {\n            comment: comment,\n            userName: item.name,\n            userId: item._id,\n            postId: postId\n        };\n        fetch(\"/comment\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                // \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                comment: comment,\n                userName: item.name,\n                userId: item._id,\n                postId: postId\n            })\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html: data.error})\n            }\n            else{\n                M.toast({html:data.message})\n                history.push('/');\n\n            }\n        }).catch(err=>console.log(err));\n    }\n\n    return (\n        <div className=\"home\">\n            {posts.map(post => {\n                return (\n                <div className=\"card home-card\" key={post._id}>\n                    <h5>{post.postedBy.name}</h5>\n                    <div className=\"card-image\">\n                        <img src={post.photo} />\n                    </div>\n                    <h6>\n                        Comments:\n                    </h6>\n                    {post.comments.map(comment => {\n                        return (<p>\n                            <strong>\n                                {comment.userName}\n                            </strong>\n                            <br />\n                            {comment.comment}\n                        </p>)\n                    })}\n                    <div className=\"card-content\">\n                        <h5>{post.title}</h5>\n                        <p>{post.body}</p>\n\n                        <input type=\"text\" placeholder=\"add a comment\"\n                            value={comment}\n                            onChange={(e)=>{\n                                setComment(e.target.value);\n                            }}\n                        />\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"\n                        onClick={PostComment.bind(this, post._id)}\n                        >\n                            Submit\n                        </button>\n                    </div>\n                </div>)\n            })}\n            \n        </div>\n    )\n}\n\n\nexport default Home;","import React, {useState, useContext} from 'react';\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nconst Signin = () =>{\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    const PostData=()=>{\n        fetch(\"/signin\",{\n            method:\"post\",\n            headers:{\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            console.log(data);\n            if(data.error){\n                M.toast({html: data.error})\n            }\n            else{\n                localStorage.setItem(\"jwt\",data.token);\n                localStorage.setItem(\"user\",JSON.stringify(data.user));\n                M.toast({html:\"signed in successfully\"})\n                history.push('/');\n\n            }\n        }).catch(err=>console.log(err));\n    }\n\n\n    return (\n    <div>\n        <div className=\"card auth-card\">\n            <h2>Sign In</h2>\n            <input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e)=>{\n                    setEmail(e.target.value)\n                }}\n            />\n            <input\n                type=\"text\"\n                placeholder= \"password\"\n                value={password}\n                onChange={(e)=>{\n                    setPassword(e.target.value)\n                }}\n            />\n             <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"\n             onClick={()=>PostData()}>\n                Sign In\n            </button>\n            <h5>\n                <Link to=\"/signup\">Already have an account?</Link>\n            </h5>\n            \n        </div>\n        \n    </div>\n    )\n}\n\nexport default Signin;","import React, {useState} from 'react';\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nconst Signin = () =>{\n    const history = useHistory();\n    const [name, setName ] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    const PostData=()=>{\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                name,\n                password,\n                email\n            })\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html: data.error})\n            }\n            else{\n                M.toast({html:data.message})\n                history.push('/signin');\n\n            }\n        }).catch(err=>console.log(err));\n    }\n\n    return (\n    <div>\n        <div className=\"card auth-card\">\n            <h2>Sign Up</h2>\n            <input\n                type=\"text\"\n                placeholder=\"name\"\n                value={name}\n                onChange={(e)=>{\n                    setName(e.target.value)\n                }}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e)=>{\n                    setEmail(e.target.value)\n                }}\n            />\n            <input\n                type=\"text\"\n                placeholder= \"password\"\n                value={password}\n                onChange={(e)=>{\n                    setPassword(e.target.value)\n                }}\n            />\n\n             <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"\n             onClick={PostData}\n             >\n                Sign up\n            </button>\n            <h5>\n                <Link to=\"/signin\">Already have an account?</Link>\n            </h5>\n            \n        </div>\n        \n    </div>\n    )\n}\n\nexport default Signin;","import React,{useEffect, useState} from 'react';\n\nconst Profile = () =>{\n    const [posts, setPosts] = useState([]);\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    useEffect(()=>{\n         fetch(\"/mypost\",{\n             method:\"get\",\n             headers:{\n                 \"Content-Type\":\"application/json\",\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n             },\n         }).then(res=>res.json())\n         .then(data=>{\n            console.log(data.mypost);\n            setPosts(data.mypost);\n            // if(data.error){\n            //    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            // }\n            // else{\n            //     M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\n            //     history.push('/')\n            // }\n         }).catch(err=>{\n             console.log(err)\n         })\n     \n     },[])\n\n\n    return (\n        <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\n            <div style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                margin: \"18px 0px\",\n                borderBottom:\"1px solid grey\"\n            }}>\n            <div>\n                <h4>{user.name}</h4>\n                <div style={{display:\"flex\", justifyContent: \"space-between\", width:\"108%\"}}>\n                    <h6>{posts.length} posts</h6>\n                </div>\n            </div>\n            </div>\n            {posts.map(post=>{\n                return(\n                    <img className=\"item\" src={post.photo}/>\n                )\n            })}\n        </div>\n\n\n       \n    )\n\n}\n\nexport default Profile;","import React, {\n    useState,\n    useEffect\n} from 'react'\nimport M from 'materialize-css'\nimport {\n    useHistory\n} from 'react-router-dom'\nconst CreatePost = () => {\n    const history = useHistory()\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n    useEffect(()=>{\n       if(url){\n        fetch(\"/createpost\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                title,\n                body,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n\n           if(data.error){\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n           }\n           else{\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\n               history.push('/')\n           }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n    },[url])\n\n    const postDetails = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"socialmedia\")\n        data.append(\"cloud_name\",\"sayansingha\")\n        fetch(\"https://api.cloudinary.com/v1_1/sayansingha/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n           setUrl(data.url)\n        })\n        .catch(err=>{\n            console.log(err)\n        })     \n    }\n\n\n    return ( \n        <div className = \"card input-filed\"\n        style = {\n            {\n                margin: \"30px auto\",\n                maxWidth: \"500px\",\n                padding: \"20px\",\n                textAlign: \"center\"\n            }\n        } >\n        <input type = \"text\"\n        placeholder = \"title\"\n        value = {\n            title\n        }\n        onChange = {\n            (e) => setTitle(e.target.value)\n        }\n        /> \n        <input type = \"text\"\n        placeholder = \"body\"\n        value = {\n            body\n        }\n        onChange = {\n            (e) => setBody(e.target.value)\n        }\n        /> \n        <div className = \"file-field input-field\" >\n        <div className = \"btn #64b5f6 blue darken-1\" >\n        <span > Uplaod Image </span> \n        <input type = \"file\"\n        onChange = {\n            (e) => setImage(e.target.files[0])\n        }\n        /> \n        </div > \n        <div className = \"file-path-wrapper\" >\n        <input className = \"file-path validate\"\n        type = \"text\" / >\n        </div> \n        </div > \n        <button className = \"btn waves-effect waves-light #64b5f6 blue darken-1\"\n        onClick = {\n            postDetails\n        }>\n        Submit post </button>\n\n        </div>\n    )\n}\n\n\nexport default CreatePost","import React,{useEffect, createContext,useReducer} from 'react';\nimport NavBar from './components/Navbar'\nimport './App.css'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/Signin'\nimport Signup from './components/screens/Signup'\nimport Profile from './components/screens/Profile'\nimport CreatePost from './components/screens/CreatePost'\n\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\n\n\nfunction App() {\n\n  return (\n  \n      <BrowserRouter>\n        <NavBar />\n        <Route exact path='/'>\n          <Home/>\n          </Route>\n          <Route path='/signin'>\n            <Signin/>\n          </Route>\n          <Route path = '/signup'>\n            <Signup/>\n          </Route>\n          <Route path = '/profile'>\n            <Profile />\n          </Route>\n          <Route path = '/create'>\n            <CreatePost />\n          </Route>\n      </BrowserRouter>\n      \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}